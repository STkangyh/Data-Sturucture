분리 집합:
- 트리 표현:
  - 집합의 모든 원소 수 0~n-1이라고 가정
  - 모든 집합들은 쌍별로 분리됨을 가정
    - 임의의 두 집합은 어떤 원소도 공유하지 않음
  - 자식에서 부모로 가는 링크로 연결
- 집합의 데이터 표현:
  - SetName, pointer
- 집합의 배열 표현:
  - i번째 원소는 원소 i를 포함하는 트리 노드
    - 원소는 대응되는 트리 노드의 부모 포인터
    - 루트의 부모는 -1
      - 루트 노드는 null로 연결되있음
      - 루트 외의 노드는 그 노드의 부모 노드에 pointer 연결
- Disjoint set union:
  - 두 트리 중 하나를 다른 트리의 서브트리로 넣는다
- SimpleUnion & SimpleFind:
  - 변질(degenerate) 트리
    - n개의 원소가 각각 n개의 집합에 하나씩 포함된 경우
      - S_i={i}
    - 초기 상태는 n개의 노드들로 이루어진 Forest
    - parent[i]=-1
      - 왜냐면 forest의 트리들은 모두 노드가 한 개 가지고 있기 때문
    - n-1번의 합집합은 O(n) 시간에 수행된다.
    - 레벨 i에 있는 원소에 대한 수행 시간은 O(i)
    - 0~n-1 을 원소로 하는 UnionTree에서 레벨 i에 있는 원소를 n번 수행하면 O(n^2) 시간
- 가중 규칙을 적용하면?:
  - Union(i,j)를 위한 가중 규칙:
    - 루트 i를 가진 트리의 노드 수 < 루트 j를 가진 트리의 노드 수
      - j를 i의 부모로
    - 모든 트리의 루트에 count(계수) 필드 유지 (count는 트리의 노드 개수)
      - 루트의 parent는 -1, 루트의 parent에 -count 유지
    - WeightedUnion O(1)
    - WeightedFind(=SimpleFind) O(logm)
      - 합집합의 결과가 m개의 노드를 가진 트리의 높이 <= (log_2 m)(내림)+1
    - u-1개의 합집합 + f개의 탐색 O(u+flogu)
      - 트리의 노드 수 <= u 
- 붕괴 규칙 이용한 탐색 알고리즘:
  - 붕괴 규칙(collapsing rule)
    - if j가 i에서 루트로 가는 경로 상에 있고, parent[i]!=root(i)이면 parent[j]=root(i)로 지정
      - i에서 루트로 가는 노드를 붕괴