트리:
- 정의: 하나 이상의 node로 이루어진 유한 집합
      하나의 root node, 나머지는 n개의 분리 집합으로 분할 가능한 노드들
- 노드: 한 정보 아이템 + 다른 노드로 뻗어진 가지
- 노드의 차수(degree): 노드의 서브트리 수
- 단말(리프) 노드: 차수 = 0
- 자식: 노드 X의 서브트리의 루트
- 형제: 부모가 같은 자식들
- 트리의 차수: max{노드의 차수}
- 조상: 루트까지의 경로상에 있는 모든 노드
- 노드 레벨: 루트는 레벨 1, 자식 레벨 = 부모 레벨 + 1
- 트리 높이(깊이): max{노드 레벨}

리스트 표현:
- 트리의 리스트 표현: (A(B(E(K,L),F),C(G),D(H(M),I,J)))
- 차수가 K인 트리에 대한 노드 구조:
  - data
  - k개의 CHILD 포인터
    - 공간 낭비가 많음
      - k원(차수가 k인) 트리에서 노드 수가 n이면 nk개의 자식 필드 중 n(k-1)+1개의 필드가 0

왼쪽 자식-오른쪽 형제 표현:
- 노드 구조: data, left child, right sibling
  data: 노드의 데이터
  left child: 자식 노드를 가리키는 포인터
  right sibling: 형제 노드를 가리키는 포인터

차수가 2인 트리:
- 왼쪽 자식-오른쪽 형제 트리의 오른쪽 형제 포인터를 45도 회전
- 루트 노드의 오른쪽 자식은 공백
- 그러면 binary tree가 된다.(왼쪽 자식-오른쪽 자식 트리)