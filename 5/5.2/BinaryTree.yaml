이진 트리의 특성:
- 한 노드는 최대 두 개의 가지
- 왼쪽 서브트리와 오른쪽 서브트리 구별
- 0개의 노드를 가질 수 있음

이진 트리의 정의:
- 공백이거나 두 개의 분리된 이진 트리로 구성된 노드의 유한집합

이진 트리와 일반 트리의 차이점:
- 공백 이진 트리 존재
- 자식의 순서 구별

이진 트리의 성질:
- 최대 노드 수:
  - 레벨 i에서의 최대 노드 수 = 2^(i-1) (i>=1)
  - 깊이가 k인 이진 트리가 가질 수 있는 최대 노드 수 = 2^k - 1(k>=1)
  - 증명(귀납적)
    - i=1일 때 레벨 i의 트리는 루트 노드가 유일한 노드이므로 최대 노드 수 1
    - i=n일 때 레벨 n-1에서 최대 노드 수 2^(n-2)
    - 각 노드의 최대 차수는 2 이므로 레벨 n의 최대 노드 수는 레벨 n-1에서의 최대 노드 수의 2배
      레벨 n에서의 최대 노드 수 2^(n-1)
  - 증명2
    - Sum(레벨 i의 최대 노드 수) = Sum(2^(i-1)) = 2^k - 1
- 리프 노드 수와 차수가 2인 노드 수와의 관계:
  - n_0 = n_2 + 1
    - n_0 = 리프 노드 수
    - n_2 = 차수가 2인 노드 수
  - 증명
    - 총 노드의 수 = n_0 + n_1 + n_2
      - n_1 = 차수가 1인 노드 수
    - 루트를 제외한 모든 노드들은 들어오는 가지가 하나씩 있음
      - 총 노드의 수 = 총 가지의 수 + 1
    - 모든 가지는 차수가 1 또는 2인 노드에서 뻗어 나옴
      - 총 가지의 수 = n_1 + 2n_2
    - 총 노드 수 = 총 가지 수 + 1 = n_1 + 2n_2 + 1
    - 따라서 n_0 = n_2 + 1
- 포화 이진 트리(full binary tree):
  - 깊이가 k이고 노드 수가 2^k - 1 인 이진 트리
  - 노드 번호 1부터 2^k - 1까지 순차적 부여 가능
- 완전 이진 트리(Complete binary tree):
  - 깊이가 k이고 노드 수가 n인 이진 트리
  - 각 노드들의 깊이가 k인 포화 이진 트리에서 1부터 n까지 번호를 붙인 노드와 1대 1로 일치
  - n 노드 완전 이진 트리의 높이 = {log_2(n+1)} {올림}

이진 트리 표현:
- 배열 표현:
  - 1차원 배열에 노드를 저장
  - n개의 노드를 갖는 완전 이진 트리
    - parent(i) = {i/2} {내림} (i=1 제외)
    - leftChild(i) = 2i (2i<=n), 왼쪽 자식 없음 (2i>n)
    - rightChild(i) = 2i+1 (2i+1<=n), 오른쪽 자식 없음(2i_1>n)
  - 완전 이진 트리는 낭비 되는 공간 없음
  - 편향 트리는 공간 낭비 발생
    - 최악의 경우, 깊이 k 편향 트리는 2^k - 1 중 k개만 사용
- 연결 표현:
  - 노드 표현
    - left child, right child 포인터
    - data
  - 부모를 알기 어려워 parent field를 추가하기도 함.
