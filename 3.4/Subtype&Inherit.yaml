서브타입과 상속:
- IS-A 관계
- 추상 데이터 타입 간의 서브 타입(subtype) 관계를 표현

- Bag과 Stack 간의 관계
  - Bag= 단순히 원소들이 삽입과 삭제가 될 수 있는 자료구조
  - stack은 Bag의 하나(IS-A) 즉, Stack은 Bag의 서브타입

- 공용 상속(public inheritance)으로 IS-A관계를 표현
  - 기본클래스 = Bag
  - 파생클래스 = Stack

- 상속의 의미
  - 파생 클래스(stack)가 기본 클래스(Bag)의 모든 멤버(데이터와 함수)들을 상속받음
    - 기본 클래스의 비전용 멤버에만 접근 가능
  - 상속된 멤버들은 기본 클래스에서 가졌던 것과 똑같은 접근 레벨을 파생 클래스에서도 갖음
  - 상속 받은 멤버함수는 똑같은 프로토타입(prototype)을 유지함
    - 기본 클래스 인터페이스(interface) 재사용
    - 파생 클래스 연산의 구현이 기본 클래스의 구현과 달라야 할 경우엔 기본 클래스의 구현을 무시하고 파생 클래스에서 재구현

- Bag과 Queue 간의 관계
  - 선입선출 순서로 원소가 삭제되어야 하므로 Bag보다 더 세분화 된것
  - Queue도 파생클래스로 표현 가능
    - Queue와 Bag의 구현 사이의 유사성은 stack과의 것보다 덜하여 더 많은 연산이 재정의 되어야 함